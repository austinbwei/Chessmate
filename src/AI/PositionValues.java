package AI;

import Pieces.Piece;

public class PositionValues {

    private final int[][] wPawn = {
            {0, 0, 0, 0, 0, 0, 0, 0},
            {40, 40, 40, 40, 40, 40, 40, 40},
            {10, 10, 20, 30, 30, 20, 10, 10},
            {3, 3, 10, 20, 20, 10, 3, 3},
            {0, 0, 0, 15, 15, 0, 0, 0},
            {5, -5, -10, 0, 0, -10, -5, 5},
            {5, 10, 10, -15, -15, 10, 10, 5},
            {0, 0, 0, 0, 0, 0, 0, 0}
    };

    private final int[][] bPawn = {
            {0, 0, 0, 0, 0, 0, 0, 0},
            {5, 10, 10, -15, -15, 10, 10, 5},
            {5, -5, -10, 0, 0, -10, -5, 5},
            {0, 0, 0, 15, 15, 0, 0, 0},
            {3, 3, 10, 20, 20, 10, 3, 3},
            {10, 10, 20, 30, 30, 20, 10, 10},
            {40, 40, 40, 40, 40, 40, 40, 40},
            {0, 0, 0, 0, 0, 0, 0, 0}
    };

    private final int[][] wRook = {
            {0, 0, 0, 0, 0, 0, 0, 0},
            {6, 8, 10, 10, 10, 10, 8, 6},
            {-5, 0, 0, 0, 0, 0, 0, -5},
            {-5, 0, 0, 0, 0, 0, 0, -5},
            {-5, 0, 0, 0, 0, 0, 0, -5},
            {5, 0, 0, 0, 0, 0, 0, 5},
            {0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0}
    };

    private final int[][] bRook = {
            {0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0},
            {5, 0, 0, 0, 0, 0, 0, 5},
            {-5, 0, 0, 0, 0, 0, 0, -5},
            {-5, 0, 0, 0, 0, 0, 0, -5},
            {-5, 0, 0, 0, 0, 0, 0, -5},
            {6, 8, 10, 10, 10, 10, 8, 6},
            {0, 0, 0, 0, 0, 0, 0, 0}
    };

    private final int[][] wKnight = {
            {-50, -40, -30, -20, -20, -30, -40, -50},
            {-40, -25, 0, 0, 0, 0, -25, -40},
            {-30, 0, 10, 17, 17, 10, 0, -30},
            {-20, 5, 17, 20, 20, 17, 5, -20},
            {-20, 0, 17, 20, 20, 17, 0, -20},
            {-30, 5, 10, 17, 17, 10, 5, -30},
            {-40, -25, 0, 10, 10, 0, -25, -40},
            {-50, -40, -30, -20, -20, -30, -40, -50}
    };

    private final int[][] bKnight = {
            {-50, -40, -30, -20, -20, -30, -40, -50},
            {-40, -25, 0, 10, 10, 0, -25, -40},
            {-30, 5, 10, 17, 17, 10, 5, -30},
            {-20, 0, 17, 20, 20, 17, 0, -20},
            {-20, 5, 17, 20, 20, 17, 5, -20},
            {-30, 0, 10, 17, 17, 10, 0, -30},
            {-40, -25, 0, 0, 0, 0, -25, -40},
            {-50, -40, -30, -20, -20, -30, -40, -50}
    };

    private final int[][] wBishop = {
            {-25, -10, -10, -10, -10, -10, -10, -25},
            {-10, 0, 0, 0, 0, 0, 0, -10},
            {-10, 0, 5, 10, 10, 5, 0, -10},
            {-10, 5, 5, 10, 10, 5, 5, -10},
            {-10, 0, 10, 10, 10, 10, 0, -10},
            {-10, 10, 10, 10, 10, 10, 10, -10},
            {-10, 5, 0, 0, 0, 0, 5, -10},
            {-25, -10, -10, -10, -10, -10, -10, -25}
    };

    private final int[][] bBishop = {
            {-25, -10, -10, -10, -10, -10, -10, -25},
            {-10, 5, 0, 0, 0, 0, 5, -10},
            {-10, 10, 10, 10, 10, 10, 10, -10},
            {-10, 5, 5, 10, 10, 5, 5, -10},
            {-10, 5, 5, 10, 10, 5, 5, -10},
            {-10, 0, 5, 10, 10, 5, 0, -10},
            {-10, 0, 0, 0, 0, 0, 0, -10},
            {-25, -10, -10, -10, -10, -10, -10, -25}
    };

    private final int[][] wQueen = {
            {-15, -5, -5, -5, -5, -5, -5, -15},
            {-10, 0, 0, 0, 0, 0, 0, -10},
            {-10, 0, 5, 5, 5, 5, 0, -10},
            {0, 0, 5, 5, 5, 5, 5, -10},
            {0, 0, 5, 5, 5, 5, 0, -10},
            {-10, 5, 5, 5, 5, 5, 0, -10},
            {-10, 0, 8, 0, 0, 0, 0, -10},
            {-15, -5, -5, -5, -5, -5, -10, -15}
    };

    private final int[][] bQueen = {
            {-15, -5, -5, -5, -5, -5, -10, -15},
            {-10, 0, 0, 0, 0, 8, 0, -10},
            {-10, 0, 5, 5, 5, 5, 5, -10},
            {-10, 5, 5, 5, 5, 5, 0, 0},
            {-10, 0, 5, 5, 5, 5, 5, 0},
            {-10, 0, 5, 5, 5, 5, 0, -10},
            {-10, 0, 0, 0, 0, 0, 0, -10},
            {-15, -5, -5, -5, -5, -5, -5, -15}
    };

    protected PositionValues() {

    }

    /**
     * Relate piece's current position to set piece position value 2D arrays
     * @param piece having its position rated
     * @param i row
     * @param j column
     * @return rating of the piece's location
     */
    protected int ratePiece(Piece piece, int i, int j) {
        switch(piece.toString()) {
            case "P":
                return wPawn[i][j];
            case "p":
                return bPawn[i][j];
            case "R":
                return wRook[i][j];
            case "r":
                return bRook[i][j];
            case "N":
                return wKnight[i][j];
            case "n":
                return bKnight[i][j];
            case "B":
                return wBishop[i][j];
            case "b":
                return bBishop[i][j];
            case "Q":
                return wQueen[i][j];
            case "q":
                return bQueen[i][j];
        }
        return 0;
    }

}
